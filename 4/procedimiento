Usando las operaciones de Lista, escribir un procedimiento 
AGRUPA (PRIM, ULT: puntero a nodo; A:entero) que, dada una 
lista doblemente encadenada de enteros L agrupe (sume) 
elementos de tal manera que en L queden sólo elementos mayores 
o iguales que A. El algoritmo recorre la lista y cuando 
encuentra un elemento menor empieza a agrupar (sumar) el 
elemento con los siguientes hasta llegar al valor A o hasta 
que se acabe la lista (el elemento menor se debe eliminar de 
la lista, excepto el último.) 

Por ejemplo si A= 10 y la lista es:
 L = {3,4,2,4,1,4,4,3,2,2,4,1,4,1,4,4,1,4,4,2}, entonces 
AGRUPA(PRIM, ULT,10) da L = {13,12,13,10,10}. 
En la lista final NO deben quedar elementos menores que A, 
salvo, eventualmente, el último


solución de los profes:

procedimiento agrupa (prim, ult,p ,q : puntero a nodo, A: entero) es

q:= prim
mientras q <> null hacer
	si *q.dato < A y q <> ult entonces
		p := *q.prox
		mientras *q.dato < A hacer
			*q.dato := *q.dato + *p.dato
			*q.prox := *p.prox
			*(*p.prox).ante := q
			b := p
			p:=*p.prox
			disponer(b)
		finmientras
	finsi
	q:=*q.prox
finmientras
finagrupa
